/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.27).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package dev.stepanenko.my.warehouse.api;

import dev.stepanenko.my.warehouse.model.Warehouse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-07-29T09:17:33.220Z")

@Validated
@Api(value = "warehouses", description = "the warehouses API")
@RequestMapping(value = "")
public interface WarehousesApi {

    @ApiOperation(value = "Удаляет склад", nickname = "warehousesDelete", notes = "", response = Warehouse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Склад удален", response = Warehouse.class),
        @ApiResponse(code = 400, message = "Склад не пустой"),
        @ApiResponse(code = 404, message = "Склад не найден") })
    @RequestMapping(value = "/warehouses",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Warehouse> warehousesDelete(@ApiParam(value = "") @Valid @RequestParam(value = "name", required = false) String name);


    @ApiOperation(value = "Возвращает склад и его товары", nickname = "warehousesGet", notes = "", response = Warehouse.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Склады и Количество товаров на складах", response = Warehouse.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "Склад не найден") })
    @RequestMapping(value = "/warehouses",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Warehouse>> warehousesGet(@ApiParam(value = "") @Valid @RequestParam(value = "name", required = false) String name,@ApiParam(value = "") @Valid @RequestParam(value = "pageNumber", required = false) Integer pageNumber,@ApiParam(value = "") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize);


    @ApiOperation(value = "Добавляет новый склад", nickname = "warehousesPost", notes = "", tags={ "Склады", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 400, message = "Некорректный запрос") })
    @RequestMapping(value = "/warehouses",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> warehousesPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Warehouse body);


    @ApiOperation(value = "Изменяет имя склада", nickname = "warehousesPut", notes = "", tags={ "Склады", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Переменование успешно"),
        @ApiResponse(code = 400, message = "Некорректный новое имя"),
        @ApiResponse(code = 404, message = "Имя не найдено") })
    @RequestMapping(value = "/warehouses",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> warehousesPut(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "oldName", required = true) String oldName,@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "newName", required = true) String newName);

}
